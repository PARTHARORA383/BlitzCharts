{
  "name": "hover-glow-barchart",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": ["recharts", "lucide-react"],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "charts/barcharts/hover-glow/hover-glow-barchart.tsx",
      "content": "\"use client\"\n\nimport { TrendingUp } from \"lucide-react\"\nimport { Bar, BarChart, CartesianGrid, XAxis } from \"recharts\"\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\"\nimport { useState } from \"react\"\n\nexport const description = \"A bar chart\"\n\nconst chartData = [\n  { month: \"January\", Revenue: 2560.12 },\n  { month: \"February\", Revenue: 2750.87 },\n  { month: \"March\", Revenue: 2389.42 },\n  { month: \"April\", Revenue: 1975.00 },\n  { month: \"May\", Revenue: 3050.00 },\n  { month: \"June\", Revenue: 3055.12 },\n];\n\nconst chartConfig = {\n  desktop: {\n    label: \"Revenue\",\n    color: \"var(--chart-1)\",\n  },\n} satisfies ChartConfig\n\nimport React from \"react\";\n\ntype Props = {\n  active?: boolean;\n  payload?: any[];\n  label?: string | number;\n};\n\nexport default function CustomTooltip({ active, payload, label }: Props) {\n  if (!active || !payload || payload.length === 0) return null;\n\n  return (\n    <div className=\" p-3 rounded shadow-xl border-2 border-border text-sm w-[160px]\">\n      {payload.map((item, index) => (\n        <div key={index} className=\"flex justify-between gap-2 text-secondary-foreground\">\n          <span>{item.name} :</span>\n          <span className=\"\">${item.value.toLocaleString()}</span>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport function HoverGlowBarChart() {\n  const [hoveredIndex , setHoveredIndex ] = useState(null);\n  return (\n    <Card className=\"rounded-none border-none\">\n      <CardHeader>\n        <CardTitle className=\"text-neutral-400\">Performance Overview</CardTitle>\n        <CardDescription className=\"text-xl text-neutral-100 flex gap-2 items-baseline-last\">\n          $ 15,780.53 \n          <span className=\"text-green-400 font-medium text-sm\"> +15.3%</span>\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <BarChart accessibilityLayer data={chartData}>\n            <CartesianGrid vertical={false} />\n            <XAxis\n              dataKey=\"month\"\n              tickLine={false}\n              tickMargin={10}\n              axisLine={false}\n              tickFormatter={(value) => value.slice(0, 3)}\n            />\n            <ChartTooltip content={CustomTooltip} cursor={{ opacity: 0 }} />\n            <defs>\n              <filter id=\"glow\" x=\"-50%\" y=\"-50%\" height=\"200%\" width=\"200%\">\n                <feGaussianBlur stdDeviation={3} result=\"coloredBlur\"/>\n                <feMerge>\n                  <feMergeNode in=\"coloredBlur\"/>\n                  <feMergeNode in=\"SourceGraphic\"/>\n                </feMerge>\n              </filter>\n            </defs>\n            <Bar\n              dataKey=\"Revenue\"\n              radius={4}\n              shape={(props: any) => {\n                const { x, y, width, height, index } = props;\n                const isHover = hoveredIndex === index;\n                return (\n                  <rect\n                    x={x}\n                    y={y}\n                    width={width}\n                    height={height}\n                    fill={isHover ? \"var(--chart-4)\" : \"#262626\"}\n                    filter={isHover ? \"url(#glow)\" : \"none\"}\n                    rx={10}\n                    ry={10}\n                    onMouseEnter={() => setHoveredIndex(index)}\n                    onMouseLeave={() => setHoveredIndex(null)}\n                  />\n                );\n              }}\n            />\n          </BarChart>\n        </ChartContainer>\n      </CardContent>\n      <CardFooter className=\"flex-col items-start gap-2 text-md\">\n        <div className=\"flex gap-2 leading-none font-medium\">\n          Trending up by 15.3% this month <TrendingUp className=\"h-4 w-4\" />\n        </div>\n        <div className=\"text-muted-foreground leading-none\">\n          January - June 2025\n        </div>\n      </CardFooter>\n    </Card>\n  )\n}",
       "type": "registry:ui"
    }
  ]
}

{
  "name": "hover-glow-simple-barchart",
  "type": "registry:ui",
  "registryDependencies": ["chart"],
  "dependencies": ["recharts"],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "hover-glow-simple-barchart.tsx",
      "content": "import { TrendingUp } from \"lucide-react\"\nimport { Bar, BarChart, CartesianGrid, XAxis } from \"recharts\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\"\nimport { useState } from \"react\"\n\nexport const description = \"A bar chart\"\n\nconst chartData = [\n  { month: \"January\", desktop: 186, mobile: 80 },\n  { month: \"February\", desktop: 305, mobile: 200 },\n  { month: \"March\", desktop: 237, mobile: 120 },\n  { month: \"April\", desktop: 73, mobile: 190 },\n  { month: \"May\", desktop: 209, mobile: 130 },\n  { month: \"June\", desktop: 214, mobile: 140 },\n]\n\nconst chartConfig = {\n  desktop: {\n    label: \"Desktop\",\n    color: \"#AFAFFF\",\n  },\n  mobile: {\n    label: \"Mobile\",\n    color: \"#5C5CFF\",\n  },\n} satisfies ChartConfig\n\nexport function HoverGlowSimpleBarChart() {\n  const [hoveredIndex, setHoveredIndex] = useState(null);\n  return (\n    <Card className=\"border-none rounded-none\">\n      <CardHeader>\n        <CardTitle>Bar Chart - Simple</CardTitle>\n        <CardDescription>\n          Showing total visitors for the last 6 months\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <BarChart accessibilityLayer data={chartData}>\n            <CartesianGrid vertical={false} strokeDasharray={5} />\n            <XAxis\n              dataKey=\"month\"\n              tickLine={false}\n              tickMargin={10}\n              axisLine={false}\n              tickFormatter={(value) => value.slice(0, 3)}\n            />\n            <ChartTooltip\n              cursor={false}\n              content={<ChartTooltipContent hideLabel indicator=\"dashed\" />}\n            />\n            <defs>\n              <filter id=\"glow\" x=\"-50%\" y=\"-50%\" height=\"200%\" width=\"200%\">\n                <feGaussianBlur stdDeviation={3} result=\"coloredBlur\" />\n                <feMerge>\n                  <feMergeNode in=\"coloredBlur\" />\n                  <feMergeNode in=\"SourceGraphic\" />\n                </feMerge>\n              </filter>\n            </defs>\n            <Bar\n              dataKey=\"desktop\"\n              radius={4}\n              shape={(props: any) => {\n                const { x, y, width, height, index } = props;\n                const isHover = hoveredIndex === index;\n                return (\n                  <rect\n                    x={x}\n                    y={y}\n                    width={width}\n                    height={height}\n                    fill={isHover ? \"#AFAFFF\" : \"var(--primary)\"}\n                    filter={isHover ? \"url(#glow)\" : \"none\"}\n                    rx={4}\n                    ry={4}\n                    onMouseEnter={() => setHoveredIndex(index)}\n                    onMouseLeave={() => setHoveredIndex(null)}\n                  />\n                );\n              }}\n            />\n            <Bar\n              dataKey=\"mobile\"\n              radius={4}\n              shape={(props: any) => {\n                const { x, y, width, height, index } = props;\n                const isHover = hoveredIndex === index;\n                return (\n                  <rect\n                    x={x}\n                    y={y}\n                    width={width}\n                    height={height}\n                    fill={isHover ? \"#5C5CFF\" : \"#444444\"}\n                    filter={isHover ? \"url(#glow)\" : \"none\"}\n                    rx={4}\n                    ry={4}\n                    onMouseEnter={() => setHoveredIndex(index)}\n                    onMouseLeave={() => setHoveredIndex(null)}\n                  />\n                );\n              }}\n            />\n          </BarChart>\n        </ChartContainer>\n      </CardContent>\n      <CardFooter className=\"flex-col items-start gap-2 text-md\">\n        <div className=\"flex gap-2 leading-none font-medium\">\n          Trending up by 5.2% this month <TrendingUp className=\"h-4 w-4\" />\n        </div>\n        <div className=\"text-muted-foreground leading-none\">\n          January - June 2025\n        </div>\n      </CardFooter>\n    </Card>\n  )\n}",
          "type": "registry:ui"
      
    }
  ]
}

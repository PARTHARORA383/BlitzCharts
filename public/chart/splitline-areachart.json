{
  "name": "splitline-areachart",
  "type": "registry:ui",
  "registryDependencies": ["chart"],
  "dependencies": ["recharts", "motion"],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "splitline-areachart.tsx",
      "type": "registry:ui",
"content": "\"use client\"\nimport { TrendingUp } from \"lucide-react\"\nimport { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\"\nimport { motion } from \"motion/react\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { ChartConfig, ChartContainer, ChartTooltip, ChartTooltipContent } from \"@/components/ui/chart\"\nimport { useState } from \"react\"\n\nexport const description = \"An area chart with gradient fill that animates reveal on hover\"\n\nconst chartData = [\n  { month: \"January\", desktop: 186, mobile: 80 },\n  { month: \"February\", desktop: 305, mobile: 200 },\n  { month: \"March\", desktop: 237, mobile: 120 },\n  { month: \"April\", desktop: 73, mobile: 190 },\n  { month: \"May\", desktop: 209, mobile: 130 },\n  { month: \"June\", desktop: 214, mobile: 140 }\n]\n\nconst chartConfig = {\n  desktop: { label: \"Desktop\", color: \"var(--chart-1)\" },\n  mobile: { label: \"Mobile\", color: \"var(--color-mobile)\" }\n} satisfies ChartConfig\n\nexport function SplitLineAreaChart() {\n  const [hoverIndex, setHoverIndex] = useState<number | null>(null)\n  const [mousePos, setMousePos] = useState({ x: 0, y: 0 })\n  const [isInside, setIsInside] = useState(false)\n\n  const splitOffset = hoverIndex != null ? (hoverIndex / (chartData.length - 1)) * 100 : 100\n\n  return (\n    <div className=\"relative\">\n      {isInside && (\n        <div\n          className=\"pointer-events-none fixed z-50 w-24 h-24 rounded-full bg-yellow-600 opacity-60 blur-3xl\"\n          style={{ left: mousePos.x - 48, top: mousePos.y - 48 }}\n        />\n      )}\n\n      <Card className=\"border-none rounded-none\">\n        <CardHeader>\n          <CardTitle>Area Chart</CardTitle>\n          <CardDescription>Hover to reveal chart fill up to that\n         point</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <ChartContainer\n            onMouseMove={(e) => setMousePos({ x: e.clientX,  y: e.clientY })}\n            onMouseEnter={() => setIsInside(true)}\n            onMouseLeave={() => { setIsInside(false); setHoverIndex(null); }}\n            config={chartConfig}\n          >\n            <AreaChart\n              accessibilityLayer\n              data={chartData}\n              margin={{ left: 12, right: 12, top: 12 }}\n              onMouseMove={(state) => {\n                if (state && state.activeTooltipIndex != null) setHoverIndex(state.activeTooltipIndex)\n              }}\n              onMouseLeave={() => setHoverIndex(null)}\n            >\n              <CartesianGrid vertical={false} />\n              <XAxis\n                dataKey=\"month\"\n                tickLine={false}\n                axisLine={false}\n                tickMargin={8}\n                tickFormatter={(value) => value.slice(0, 3)}\n              />\n              <ChartTooltip cursor={false} content={<ChartTooltipContent />} />\n\n              <defs>\n                <linearGradient id=\"fillMobile\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                  <motion.stop offset=\"0%\" stopColor=\"var(--foreground)\" stopOpacity={0.8} />\n                  <motion.stop\n                    stopColor=\"var(--foreground)\"\n                    stopOpacity={0.8}\n                    animate={{ offset: `${splitOffset}%` }}\n                    transition={{ duration: 0.4, ease: \"easeInOut\" }}\n                  />\n                  <motion.stop\n                    stopColor=\"var(--foreground)\"\n                    stopOpacity={0.1}\n                    animate={{ offset: `${splitOffset + 0.1}%` }}\n                    transition={{ duration: 0.4, ease: \"easeInOut\" }}\n                  />\n                  <stop offset=\"95%\" stopColor=\"var(--background)\" stopOpacity={0.1} />\n                </linearGradient>\n              </defs>\n\n              <Area\n                dataKey=\"mobile\"\n                type=\"natural\"\n                fill=\"url(#fillMobile)\"\n                stroke=\"url(#fillMobile)\"\n                fillOpacity={0.4}\n              />\n            </AreaChart>\n          </ChartContainer>\n        </CardContent>\n        <CardFooter>\n          <div className=\"flex w-full items-start gap-2 text-sm\">\n            <div className=\"grid gap-2\">\n              <div className=\"flex items-center gap-2 leading-none font-medium\">\n                Trending up by 5.2% this month <TrendingUp className=\"h-4 w-4\" />\n              </div>\n              <div className=\"text-muted-foreground flex items-center gap-2 leading-none\">\n                January - June 2024\n              </div>\n            </div>\n          </div>\n        </CardFooter>\n      </Card>\n    </div>\n  )\n}\\n"
      }
  ]
    }
{
  "name": "hover-glow-barchart",
  "type": "registry:ui",
  "registryDependencies": [
    "card " ,"chart"
  ],
  "dependencies": [
    "recharts"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "hover-glow-barchart.tsx",
      "content": "\"use client\";\n\nimport { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { TrendingUp } from \"lucide-react\";\nimport React from \"react\";\n\nconst chartData = [\n  { month: \"January\", desktop: 342, mobile: 245 },\n  { month: \"February\", desktop: 876, mobile: 654 },\n  { month: \"March\", desktop: 512, mobile: 387 },\n  { month: \"April\", desktop: 629, mobile: 521 },\n  { month: \"May\", desktop: 458, mobile: 412 },\n  { month: \"June\", desktop: 781, mobile: 598 },\n  { month: \"July\", desktop: 394, mobile: 312 },\n  { month: \"August\", desktop: 925, mobile: 743 },\n  { month: \"September\", desktop: 647, mobile: 489 },\n  { month: \"October\", desktop: 532, mobile: 476 },\n  { month: \"November\", desktop: 803, mobile: 687 },\n  { month: \"December\", desktop: 271, mobile: 198 },\n];\n\nconst chartConfig = {\n  desktop: {\n    label: \"Desktop\",\n    color: \"var(--chart-1)\",\n  },\n  mobile: {\n    label: \"Mobile\",\n    color: \"var(--chart-2)\",\n  },\n} satisfies ChartConfig;\n\ntype ActiveProperty = keyof typeof chartConfig;\n\nexport function AnimatedHatchedPatternAreaChart() {\n  const [activeProperty, setActiveProperty] =\n    React.useState<ActiveProperty | null>(null);\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>\n          Hatched Area Chart\n          <Badge\n            variant=\"outline\"\n            className=\"text-green-500 bg-green-500/10 border-none ml-2\"\n          >\n            <TrendingUp className=\"h-4 w-4\" />\n            <span>5.2%</span>\n          </Badge>\n        </CardTitle>\n        <CardDescription>\n          Showing total visitors for the last 6 months\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <AreaChart accessibilityLayer data={chartData}>\n            <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n            <XAxis\n              dataKey=\"month\"\n              tickLine={false}\n              axisLine={false}\n              tickMargin={8}\n              tickFormatter={(value) => value.slice(0, 3)}\n            />\n            <ChartTooltip cursor={false} content={<ChartTooltipContent />} />\n            <defs>\n              <HatchedBackgroundPattern config={chartConfig} />\n              <linearGradient\n                id=\"hatched-background-pattern-grad-desktop\"\n                x1=\"0\"\n                y1=\"0\"\n                x2=\"0\"\n                y2=\"1\"\n              >\n                <stop\n                  offset=\"5%\"\n                  stopColor=\"var(--color-desktop)\"\n                  stopOpacity={0.4}\n                />\n                <stop\n                  offset=\"95%\"\n                  stopColor=\"var(--color-desktop)\"\n                  stopOpacity={0}\n                />\n              </linearGradient>\n              <linearGradient\n                id=\"hatched-background-pattern-grad-mobile\"\n                x1=\"0\"\n                y1=\"0\"\n                x2=\"0\"\n                y2=\"1\"\n              >\n                <stop\n                  offset=\"5%\"\n                  stopColor=\"var(--color-mobile)\"\n                  stopOpacity={0.4}\n                />\n                <stop\n                  offset=\"95%\"\n                  stopColor=\"var(--color-mobile)\"\n                  stopOpacity={0}\n                />\n              </linearGradient>\n            </defs>\n            <Area\n              onMouseEnter={() => setActiveProperty(\"mobile\")}\n              onMouseLeave={() => setActiveProperty(null)}\n              dataKey=\"mobile\"\n              type=\"natural\"\n              fill={\n                activeProperty === \"mobile\"\n                  ? \"url(#hatched-background-pattern-mobile)\"\n                  : \"url(#hatched-background-pattern-grad-mobile)\"\n              }\n              fillOpacity={0.4}\n              stroke=\"var(--color-mobile)\"\n              stackId=\"a\"\n              strokeWidth={0.8}\n            />\n            <Area\n              onMouseEnter={() => setActiveProperty(\"desktop\")}\n              onMouseLeave={() => setActiveProperty(null)}\n              dataKey=\"desktop\"\n              type=\"natural\"\n              fill={\n                activeProperty === \"desktop\"\n                  ? \"url(#hatched-background-pattern-desktop)\"\n                  : \"url(#hatched-background-pattern-grad-desktop)\"\n              }\n              fillOpacity={0.4}\n              stroke=\"var(--color-desktop)\"\n              stackId=\"a\"\n              strokeWidth={0.8}\n            />\n          </AreaChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n\nconst HatchedBackgroundPattern = ({ config }: { config: ChartConfig }) => {\n  const items = Object.fromEntries(\n    Object.entries(config).map(([key, value]) => [key, value.color])\n  );\n  return (\n    <>\n      {Object.entries(items).map(([key, value]) => (\n        <pattern\n          key={key}\n          id={`hatched-background-pattern-${key}`}\n          x=\"0\"\n          y=\"0\"\n          width=\"6.81\"\n          height=\"6.81\"\n          patternUnits=\"userSpaceOnUse\"\n          patternTransform=\"rotate(-45)\"\n          overflow=\"visible\"\n        >\n          <g overflow=\"visible\" className=\"will-change-transform\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"translate\"\n              from=\"0 0\"\n              to=\"6 0\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n            />\n            <rect width=\"10\" height=\"10\" opacity={0.05} fill={value} />\n            <rect width=\"1\" height=\"10\" fill={value} />\n          </g>\n        </pattern>\n      ))}\n    </>\n  );\n};\n",
      "type": "registry:ui"
    }
  ]
}
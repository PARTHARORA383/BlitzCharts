{
  "name": "hover-glow-barchart",
  "type": "registry:ui",
  "registryDependencies": [
    "card ",
    "chart"
  ],
  "dependencies": [
    "recharts"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "hover-glow-barchart.tsx",
      "content": "\"use client\"\r\n\r\nimport { TrendingUp } from \"lucide-react\"\r\nimport { Bar, BarChart, CartesianGrid, XAxis } from \"recharts\"\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\"\r\nimport {\r\n  ChartConfig,\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n} from \"@/components/ui/chart\"\r\nimport { useState } from \"react\"\r\n\r\nexport const description = \"A bar chart\"\r\n\r\n\r\nconst chartData = [\r\n  { month: \"January\", Revenue: 2560.12 },\r\n  { month: \"February\", Revenue: 2750.87 },\r\n  { month: \"March\", Revenue: 2389.42 },\r\n  { month: \"April\", Revenue: 1975.00 },\r\n  { month: \"May\", Revenue: 3050.00 },\r\n  { month: \"June\", Revenue: 3055.12 },\r\n];\r\n\r\nconst chartConfig = {\r\n  desktop: {\r\n    label: \"Revenue\",\r\n    color: \"var(--chart-1)\",\r\n  },\r\n} satisfies ChartConfig\r\n\r\n\r\n// CustomTooltip.tsx\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n  active?: boolean;\r\n  payload?: any[];\r\n  label?: string | number;\r\n};\r\n\r\nexport default function CustomTooltip({ active, payload, label }: Props) {\r\n  if (!active || !payload || payload.length === 0) return null;\r\n\r\n  return (\r\n    <div className=\" p-3 rounded shadow-xl border-2 border-border text-sm w-[160px]\">\r\n\r\n      {payload.map((item, index) => (\r\n        <div key={index} className=\"flex justify-between gap-2 text-secondary-foreground\">\r\n          <span>{item.name} :</span>\r\n          <span className=\"\">${item.value.toLocaleString()}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport function HoverGlowBarChart() {\r\n  const [hoveredIndex , setHoveredIndex ] = useState(null);\r\n  return (\r\n    <Card className=\"rounded-none border-none\">\r\n      <CardHeader>\r\n        <CardTitle className=\"text-neutral-400\">Performance Overview</CardTitle>\r\n              <CardDescription className=\"text-xl text-neutral-100 flex gap-2 items-baseline-last\">$ 15,780.53 \r\n                <span className=\"text-green-400 font-medium text-sm\"> +15.3%</span>\r\n              \r\n              </CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <ChartContainer config={chartConfig}>\r\n          <BarChart accessibilityLayer data={chartData}>\r\n            <CartesianGrid vertical={false} />\r\n            <XAxis\r\n              dataKey=\"month\"\r\n              tickLine={false}\r\n              tickMargin={10}\r\n              axisLine={false}\r\n              tickFormatter={(value) => value.slice(0, 3)}\r\n            />\r\n            {/* <ChartTooltip\r\n            \r\n              cursor={false}\r\n              content={<ChartTooltipContent   className=\"bg-border/100 border-2 border-transparent/20 shadow-lg py-2 \"/>}\r\n            /> */}\r\n\r\n            <ChartTooltip content={CustomTooltip} cursor ={{opacity : 0}}/>\r\n            <defs>\r\n              <filter id= \"glow\" x = \"-50%\" y = \"-50%\" height=\"200%\" width=\"200%\">\r\n                <feGaussianBlur stdDeviation={3}\r\n                result=\"coloredBlur\"/>\r\n                <feMerge>\r\n                  <feMergeNode in = \"coloredBlur\"/>\r\n                  <feMergeNode in  = \"SourceGraphic\"/>\r\n                </feMerge>\r\n\r\n                  \r\n\r\n              </filter>\r\n            </defs>\r\n          <Bar\r\n            dataKey=\"Revenue\"\r\n            radius={4}\r\n            shape={(props:any) => {\r\n              const { x, y, width, height,  index } = props;\r\n              const isHover = hoveredIndex === index;\r\n              return (\r\n                <rect\r\n                  x={x}\r\n                  y={y}\r\n                  width={width}\r\n                  height={height}\r\n                  fill={isHover ? \"var(--chart-4)\" : \"#262626\"}\r\n                  filter={isHover ? \"url(#glow)\": \"none\"} \r\n                  rx={10}\r\n                  ry={10}\r\n                  onMouseEnter={() => setHoveredIndex(index)}\r\n                  onMouseLeave={() => setHoveredIndex(null)}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n          </BarChart>\r\n        </ChartContainer>\r\n      </CardContent>\r\n      <CardFooter className=\"flex-col items-start gap-2 text-md\">\r\n        <div className=\"flex gap-2 leading-none font-medium\">\r\n          Trending up by 15.3% this month <TrendingUp className=\"h-4 w-4\" />\r\n        </div>\r\n            <div className=\"text-muted-foreground leading-none\">\r\n            January - June 2025\r\n        </div>\r\n   \r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}
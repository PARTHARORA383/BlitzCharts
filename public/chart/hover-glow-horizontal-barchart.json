{
  "name": "hover-glow-horizontal-barchart",
  "type": "registry:ui",
  "registryDependencies": ["chart"],
  "dependencies": ["recharts"],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "hover-glow-horizontal-barchart.tsx",
      "content": "\"use client\"\n\nimport { TrendingUp } from \"lucide-react\"\nimport { Bar, BarChart, XAxis, YAxis, CartesianGrid } from \"recharts\"\nimport { useState } from \"react\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\"\n\nexport const description = \"A horizontal bar chart\"\n\nconst chartData = [\n  { month: \"January\", desktop: 186 },\n  { month: \"February\", desktop: 305 },\n  { month: \"March\", desktop: 237 },\n  { month: \"April\", desktop: 73 },\n  { month: \"May\", desktop: 209 },\n  { month: \"June\", desktop: 214 }\n]\n\nconst chartConfig = {\n  desktop: {\n    label: \"Desktop\",\n    color: \"var(--chart-1)\",\n  },\n} satisfies ChartConfig\n\nexport default function HoverGlowHorizontalBarChart() {\n  const [hoveredIndex, setHoveredIndex] = useState(null);\n  return (\n    <Card className=\"rounded-none border-none\">\n      <CardHeader>\n        <CardTitle>Bar Chart - Horizontal</CardTitle>\n        <CardDescription>Showing total visitors for the last 6 months</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <BarChart\n            accessibilityLayer\n            data={chartData}\n            layout=\"vertical\"\n            margin={{ left: -20 }}\n          >\n            <XAxis type=\"number\" dataKey=\"desktop\" hide />\n            <YAxis\n              dataKey=\"month\"\n              type=\"category\"\n              tickLine={false}\n              tickMargin={10}\n              axisLine={false}\n              tickFormatter={(value) => value.slice(0, 3)}\n            />\n            <ChartTooltip\n              cursor={false}\n              content={<ChartTooltipContent hideLabel indicator=\"line\" />}\n            />\n            <defs>\n              <filter id=\"glow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n                <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\" />\n                <feMerge>\n                  <feMergeNode in=\"coloredBlur\" />\n                  <feMergeNode in=\"SourceGraphic\" />\n                </feMerge>\n              </filter>\n            </defs>\n            <Bar\n              dataKey=\"desktop\"\n              radius={2}\n              shape={(props: any) => {\n                const { x, y, width, height, index } = props;\n                const isHover = hoveredIndex === index;\n                return (\n                  <rect\n                    x={x}\n                    y={y}\n                    width={width}\n                    height={height}\n                    fill={isHover ? \"var(--chart-4)\" : \"#262626\"}\n                    filter={isHover ? \"url(#glow)\" : \"none\"}\n                    rx={10}\n                    ry={10}\n                    onMouseEnter={() => setHoveredIndex(index)}\n                    onMouseLeave={() => setHoveredIndex(null)}\n                  />\n                );\n              }}\n            />\n          </BarChart>\n        </ChartContainer>\n      </CardContent>\n      <CardFooter className=\"flex-col items-start gap-2 text-md\">\n        <div className=\"flex gap-2 leading-none font-medium\">\n          Trending up by 5.2% this month <TrendingUp className=\"h-4 w-4\" />\n        </div>\n        <div className=\"text-muted-foreground leading-none\">\n          January - June 2025\n        </div>\n      </CardFooter>\n    </Card>\n  )\n}",
       "type": "registry:ui"
    }
  ]
}

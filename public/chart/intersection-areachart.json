{
  "name": "intersection-areachart",
  "type": "registry:ui",
  "registryDependencies": ["chart"],
  "dependencies": ["recharts", "motion"],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "intersection-areachart.tsx",
      "type": "registry:ui",
        "content": "\"use client\"\n\nimport { TrendingUp } from \"lucide-react\"\nimport { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\"\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartLegend,\n  ChartLegendContent,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\"\n\nexport const description = \"An area chart with a legend\"\n\nconst chartData = [\n  { month: \"January\", desktop: 120, mobile: 220 },\n  { month: \"February\", desktop: 305, mobile: 200 },\n  { month: \"March\", desktop: 237, mobile: 120 },\n  { month: \"April\", desktop: 73, mobile: 190 },\n  { month: \"May\", desktop: 209, mobile: 130 },\n  { month: \"June\", desktop: 214, mobile: 140 }\n]\n\nconst chartConfig = {\n  desktop: {\n    label: \"Desktop\",\n    color: \"var(--chart-1)\"\n  },\n  mobile: {\n    label: \"Mobile\",\n    color: \"var(--chart-2)\"\n  }\n} satisfies ChartConfig\n\nexport function IntersectionAreaChart() {\n  return (\n    <Card className=\"border-none rounded-none\">\n      <CardHeader>\n        <CardTitle>Area Chart </CardTitle>\n        <CardDescription>\n          Showing total visitors for the last 6 months\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <AreaChart\n            accessibilityLayer\n            data={chartData}\n            margin={{\n              left: 12,\n              right: 12\n            }}\n          >\n            <CartesianGrid vertical={false} strokeDasharray={3} />\n            <XAxis\n              dataKey=\"month\"\n              tickLine={false}\n              axisLine={false}\n              tickMargin={8}\n              tickFormatter={(value) => value.slice(0, 3)}\n            />\n            <ChartTooltip\n              cursor={false}\n              content={<ChartTooltipContent indicator=\"line\" />}\n            />\n\n            {/* Stripe Pattern */}\n            <defs>\n              <pattern\n                id=\"stripe-pattern\"\n                patternUnits=\"userSpaceOnUse\"\n                width=\"6\"\n                height=\"6\"\n                patternTransform=\"rotate(-45)\"\n              >\n                <rect x=\"0\" y=\"0\" width=\"2\" height=\"6\" fill=\"#d1d5db\" />\n              </pattern>\n            </defs>\n\n            <Area\n              dataKey=\"mobile\"\n              type=\"natural\"\n              fill=\"url(#stripe-pattern)\"\n              fillOpacity={0.4}\n              stroke=\"var(--foreground)\"\n              strokeWidth={3}\n              isAnimationActive={true}\n              animationDuration={1500}\n            />\n\n            <Area\n              dataKey=\"desktop\"\n              type=\"natural\"\n              fill=\"var(--background)\"\n              strokeDasharray=\"6 6\"\n              fillOpacity={0.4}\n              stroke=\"var(--muted-foreground)\"\n              strokeWidth={2}\n              isAnimationActive={true}\n              animationDuration={1500}\n              className=\"animated-stroke\"\n            />\n\n            <ChartLegend content={<ChartLegendContent />} />\n          </AreaChart>\n        </ChartContainer>\n      </CardContent>\n      <CardFooter>\n        <div className=\"flex w-full items-start gap-2 text-sm\">\n          <div className=\"grid gap-2\">\n            <div className=\"flex items-center gap-2 leading-none font-medium\">\n              Trending up by 5.2% this month <TrendingUp className=\"h-4 w-4\" />\n            </div>\n            <div className=\"text-muted-foreground flex items-center gap-2 leading-none\">\n              January - June 2024\n            </div>\n          </div>\n        </div>\n      </CardFooter>\n\n      {/* Scoped stroke animation style\n          NOTE : Only work in Nextjs projects if you are using it in react add these styles to your index.css file*/}\n\n      <style jsx>{`\n        :global(.animated-stroke path) {\n          stroke-dasharray: 6 6;\n          stroke-dashoffset: 0;\n          animation: dashmove 2s linear infinite;\n        }\n\n        @keyframes dashmove {\n          to {\n            stroke-dashoffset: -12;\n          }\n        }\n      `}</style>\n    </Card>\n  )\n}"
    }
  ]
}
